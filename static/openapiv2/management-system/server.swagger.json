{
  "swagger": "2.0",
  "info": {
    "title": "Management System API Documentation",
    "version": "2.0",
    "contact": {
      "name": "Dinh Quan",
      "url": "github.com/QuanDN22/Server-Management-System",
      "email": "dinhngocquan112378@gmail.com"
    }
  },
  "tags": [
    {
      "name": "ManagementSystem"
    }
  ],
  "host": "localhost:8080",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/api/servers": {
      "post": {
        "summary": "Create server",
        "description": "Create server",
        "operationId": "CreateServer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceServer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceCreateServerRequest"
            }
          }
        ],
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/api/servers/ping": {
      "get": {
        "summary": "Ping server",
        "description": "Ping server",
        "operationId": "Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicePingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/api/servers/{server_id}": {
      "delete": {
        "summary": "Delete server",
        "description": "Delete server",
        "operationId": "DeleteServer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "server_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Server"
        ]
      },
      "put": {
        "summary": "Update server",
        "description": "Update server",
        "operationId": "UpdateServer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceServer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "server_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "server_name": {
                  "type": "string"
                },
                "server_ipv4": {
                  "type": "string"
                },
                "server_status": {
                  "type": "string"
                }
              },
              "title": "update server request"
            }
          }
        ],
        "tags": [
          "Server"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "serviceCreateServerRequest": {
      "type": "object",
      "properties": {
        "server_name": {
          "type": "string"
        },
        "server_ipv4": {
          "type": "string"
        },
        "server_status": {
          "type": "string"
        }
      },
      "title": "create server request"
    },
    "servicePingResponse": {
      "type": "object",
      "properties": {
        "pong": {
          "type": "string"
        }
      },
      "title": "ping response"
    },
    "serviceServer": {
      "type": "object",
      "properties": {
        "server_id": {
          "type": "string",
          "format": "int64"
        },
        "server_name": {
          "type": "string"
        },
        "server_ipv4": {
          "type": "string"
        },
        "server_status": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      },
      "title": "server"
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "externalDocs": {
    "description": "More about gRPC-Gateway",
    "url": "https://github.com/grpc-ecosystem/grpc-gateway"
  }
}
